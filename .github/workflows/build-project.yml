name: Laravel Project Build and Test

on:
  # push:
  #   branches:
  #     - dev   
  workflow_dispatch:

# env:
#   APP_ENV: production
#   DB_PORT: 3306


jobs:
  
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, bcmath, ctype, fileinfo, json, tokenizer, openssl, pdo, pdo_mysql
          tools: composer:v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install NPM & Build Assets
        run: |
          npm ci
          npm run build

      - name: Install PHP Dependencies
        run: composer install --prefer-dist --no-interaction --no-scripts

      - name: Laravel Env Setup
        run: |
          cp .env.example .env

          echo "DB_CONNECTION=${{secrets.DB_CONNECTION}}" >> .env
          echo "DB_HOST=${{secrets.DB_HOST}}" >> .env
          echo "DB_PORT=${{secrets.DB_PORT}}" >> .env
          echo "DB_DATABASE=${{secrets.DB_DATABASE}}" >> .env
          echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env
          echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env

          echo "DB_CONNECTION=${{secrets.DB_CONNECTION}}" >> .env.testing
          echo "DB_HOST=${{secrets.DB_HOST}}" >> .env.testing
          echo "DB_PORT=${{secrets.DB_PORT}}" >> .env.testing
          echo "DB_DATABASE=${{secrets.DB_DATABASE}}" >> .env.testing
          echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env.testing
          echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env.testing

          mv .env.testing env.testing
          mv .env env


      - name: Create Artifact Folder
        run: |
          mkdir -p artifact
          cp -r app bootstrap config database public resources routes storage tests artisan composer.* package-lock.json package.json env env.testing artifact/
          cp -r vendor node_modules artifact/
          cd artifact
          ls -la
          cd ..


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: laravel-app
          path: artifact

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: laravel
          MYSQL_PASSWORD: password

        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: laravel-app
          path: .

      - name: Download Files Check
        run: ls -la  

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, bcmath, ctype, fileinfo, json, tokenizer, openssl, pdo, pdo_mysql
          tools: composer:v2

      - name: Sleep 15 Second
        run: | 
          sleep 15
          ls -la


      - name: Generate Application Key
        run: |
          mv  env.testing .env.testing
          mv  env .env
          mkdir -p bootstrap/cache
          chmod 777 bootstrap/cache
          php artisan key:generate


      - name: Run Migrations & Tests
        run: |
          php artisan migrate --env=testing
          php artisan test --env=testing